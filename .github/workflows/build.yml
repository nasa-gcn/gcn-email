name: Build and test

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - env: dev
            url: https://dev.gcn.nasa.gov
          - env: test
            url: https://test.gcn.nasa.gov
          - env: prod
            url: https://gcn.nasa.gov
    environment:
      name: ${{ matrix.env }}
      url: ${{ matrix.url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ matrix.env == 'dev' }}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}-{{sha}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  python:
    name: Python tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.1

      - name: Install poetry
        run: pip install poetry

      - name: Install package
        run: poetry install --all-extras

        # - name: Run unit tests
      #   run: poetry run pytest . --cov --cov-report=xml

      # - name: Upload coverage to codecov
      #   uses: codecov/codecov-action@v3
